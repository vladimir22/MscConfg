<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	   xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<mvc:annotation-driven />
	<mvc:resources mapping="/resources/**" location="/resources/" /> <!-- не работает при schemaLocation = 3.1 -->

	<!--Cканируем аннотации в пакетах-->
	<context:annotation-config />
	<context:component-scan base-package="com.mscconfig"/>
	<context:component-scan base-package="com.mscconfig.repository"/>



<!--ViewResolver через Tiles3 - при запросе в контроллере "блабла"  идем в tiles.xml ищем <definition name="блабла"...  в кот. указывается шаблон и какую страницу отоброжать  -->
	<bean id="tilesViewResolver1" class="org.springframework.web.servlet.view.UrlBasedViewResolver" >
		<property name="order" value="1"/>
		<property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView"/>
	</bean>                           <!--Don't add suffix or prefix like you do with .jsp files-->

	<bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer" >
		<property name="definitions">
			<value>/WEB-INF/tiles.xml</value>
		</property>
	</bean>

<!--Дефолтовый ViewResolver - тупо при запросе "блабла" ищет файл /WEB-INF/pages/блабла.jsp -->
	<bean id="jspViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="order" value="2"/>    <!--Если в tiles не нашлось ищем по дефолту-->
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
		<property name="prefix" value="/WEB-INF/pages/"/>
		<property name="suffix" value=".jsp"/>
	</bean>


<!-- JpaRepository интерфейсы для прикольного(через имя метода в интефейсе) получ. сущностей из БД-->
	<jpa:repositories base-package="com.mscconfig"/>

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalEntityManagerFactoryBean">
        <property name="persistenceUnitName" value="defaultPersistenceUnit"/>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager"/>



	<!-- I18N BEGIN -->
	<mvc:interceptors>
		<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
			<property name="paramName" value="lang" />
		</bean>
	</mvc:interceptors>

	<bean id="localeResolver"
		  class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
	<!-- <property name="defaultLocale" value="en" />   -->
</bean>


<!-- Message locale -->
	<bean id="messageSource"
		  class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basename" value="classpath:messages" />
		<property name="defaultEncoding" value="UTF-8" />
	</bean>


	<!--Spring security-->
	<import resource="security.xml" />
	 <!--Bean-карта в кот. будет хранится доп. инфо юзера-->
	<bean id="loggedUserMap" class="java.util.HashMap"  >
		<constructor-arg>
			<map key-type="java.lang.String" value-type="java.lang.String">
				<entry key="firstName" value="" />
				<entry key="lastName" value="" />
			</map>
		</constructor-arg>
	</bean>

</beans>